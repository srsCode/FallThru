buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven/'}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins { id 'org.ajoberstar.reckon' version '0.13.0' }
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'checkstyle'
if (file('../.etc/srscode-MC.gradle').exists()) { apply from:'../.etc/srscode-MC.gradle' }

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

reckon {
    scopeFromProp()
    stageFromProp('dev', 'rc', 'final')
}

checkstyle {
    setConfig resources.text.fromUri('https://srscode.github.io/checkstyle/srsCode-MC-checkstyle.xml')
    setReportsDir file("${project.buildDir}/reports/checkstyle")
    setToolVersion '8.16'
}
tasks.withType(Checkstyle) {
    reports.xml.enabled false
    reports.html.enabled true
}

sourceSets.main.ext.refMap = 'fallthru.refmap.json'
def mixin_file = 'fallthru.mixins.json'
minecraft {
    mappings channel: project.mapping_channel, version: project.mapping_version
    runs {
        client {
            taskName 'fallthruClient'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug.export', 'true'
            property 'fml.earlyprogresswindow', 'false'
            arg "-mixin.config=${mixin_file}" as String
            mods {self {source sourceSets.main}}
        }
        server {
            taskName 'fallthruServer'
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug.export', 'true'
            property 'fml.earlyprogresswindow', 'false'
            arg "-mixin.config=${mixin_file}" as String
            mods {self {source sourceSets.main}}
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    annotationProcessor "org.spongepowered:mixin:${project.mixinAP_version}:processor"
}

setGroup 'de.srsco'
jar {
    from 'LICENCE.txt'
    manifest.attributes([
        'Specification-Vendor'    : "${project.vendor}",
        'Specification-Title'     : "${project.name}",
        'Specification-Version'   : '1',
        'Implementation-Vendor'   : "${project.vendor}",
        'Implementation-Title'    : "${project.name}",
        'Implementation-Version'  : "${project.version}",
        'Implementation-Timestamp': java.time.OffsetDateTime.now() as String,
        'MixinConfigs'            : mixin_file
    ])
}
